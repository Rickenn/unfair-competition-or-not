x = "Time",
y = "Current Price",
color = "Vendor"
) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Convert 'nowtime' to Date format (assuming 'nowtime' includes time information)
analysis_data <- analysis_data %>%
mutate(date = as.Date(nowtime, format = "%Y-%m-%d"))
# Sort data by product_id, vendor, and date
analysis_data <- analysis_data %>%
arrange(product_id, vendor, date)
# Calculate the price change
new_dataset <- analysis_data %>%
group_by(product_id, vendor) %>%
mutate(
changing_price = as.numeric(lead(current_price)) - as.numeric(current_price),
date_price_change = lead(date)
) %>%
ungroup() %>%
select(date_price_change, changing_price, product_id, vendor, product_name)
# View the new dataset
head(new_dataset)
# Convert 'nowtime' to Date format
analysis_data <- analysis_data %>%
mutate(date = as.Date(nowtime, format = "%Y-%m-%d"))
# Sort the data by product_id, vendor, and date
analysis_data <- analysis_data %>%
arrange(product_id, vendor, date)
# Calculate price changes and filter for rows with a change
price_change_dataset <- analysis_data %>%
group_by(product_id, vendor) %>%
mutate(
price_change = as.numeric(lead(current_price)) - as.numeric(current_price),
change_date = lead(date)
) %>%
filter(!is.na(price_change) & price_change != 0) %>%
ungroup() %>%
select(change_date, price_change, product_id, vendor, product_name)
# View the new dataset
head(price_change_dataset)
# Convert 'nowtime' to Date format
analysis_data <- analysis_data %>%
mutate(date = as.Date(nowtime, format = "%Y-%m-%d"))
# Sort the data by product_id, vendor, and date
analysis_data <- analysis_data %>%
arrange(product_id, vendor, date)
# Calculate price changes and filter for rows with a change
price_change_dataset <- analysis_data %>%
group_by(product_id, vendor) %>%
mutate(
price_change = as.numeric(lead(current_price)) - as.numeric(current_price),
change_date = lead(date)
) %>%
filter(!is.na(price_change) & price_change != 0) %>%
ungroup() %>%
select(change_date, price_change, product_id, vendor, product_name)
# View the new dataset
head(price_change_dataset)
write_csv(price_change_dataset, here("data", "02-analysis_data", "price_change_dataset.csv"))
library(readr)
price_change_dataset <- read_csv("data/02-analysis_data/price_change_dataset.csv")
View(price_change_dataset)
#| include: false
#| warning: false
#| message: false
package_list <- c("tidyverse", "kableExtra", "ggplot2", "dplyr", "here", "knitr", "rstanarm", "modelsummary", "readr", "lme4", "tinytex", "reshape2")
install_and_load <- function(package_list) {
for (package in package_list) {
if (!require(package, character.only = TRUE)) {
install.packages(package)
library(package, character.only = TRUE)
}
}
}
install_and_load(package_list)
analysis_data <- read_csv(here("data", "02-analysis_data", "analysis_data.csv"), show_col_types = FALSE)
price_change_dataset <- read_csv(here("data", "02-analysis_data", "price_change_dataset.csv"), show_col_types = FALSE)
# Get the latest change_date for each product_name
latest_change_date <- price_change_dataset %>%
group_by(product_name) %>%
summarise(latest_change_date = max(change_date, na.rm = TRUE)) %>%
ungroup()
# View the new dataset
head(latest_change_date)
# Find the latest change_date for each product_name
latest_changes <- price_change_dataset %>%
group_by(product_name) %>%
filter(change_date == max(change_date)) %>%
ungroup() %>%
select(product_name, vendor, product_id, price_change, change_date)
# View the resulting dataset
head(latest_changes)
# Get the latest change_date for each product_name
latest_changes <- price_change_data %>%
group_by(product_name) %>%
filter(change_date == max(change_date)) %>%
ungroup() %>%
select(product_name, change_date, vendor, product_id, price_change)
# Get the latest change_date for each product_name
latest_changes <- price_change_data %>%
group_by(product_name) %>%
filter(change_date == max(change_date)) %>%
ungroup() %>%
select(product_name, change_date, vendor, product_id, price_change)
# Get the latest change_date for each product_name
latest_changes <- price_change_data %>%
group_by(product_name) %>%
filter(change_date == max(change_date)) %>%
ungroup() %>%
select(product_name, change_date, vendor, product_id, price_change)
# Get the latest change_date for each product_name
latest_changes <- price_change_data %>%
group_by(product_name) %>%
filter(change_date == max(change_date)) %>%
ungroup() %>%
select(product_name, change_date, vendor, product_id, price_change)
#| include: false
#| warning: false
#| message: false
package_list <- c("tidyverse", "kableExtra", "ggplot2", "dplyr", "here", "knitr", "rstanarm", "modelsummary", "readr", "lme4", "tinytex", "reshape2")
install_and_load <- function(package_list) {
for (package in package_list) {
if (!require(package, character.only = TRUE)) {
install.packages(package)
library(package, character.only = TRUE)
}
}
}
install_and_load(package_list)
analysis_data <- read_csv(here("data", "02-analysis_data", "analysis_data.csv"), show_col_types = FALSE)
price_change_dataset <- read_csv(here("data", "02-analysis_data", "price_change_dataset.csv"), show_col_types = FALSE)
# Get the latest change_date for each product_name
latest_changes <- price_change_data %>%
group_by(product_name) %>%
filter(change_date == max(change_date)) %>%
ungroup() %>%
select(product_name, change_date, vendor, product_id, price_change)
# Get the latest change_date for each product_name
latest_changes <- price_change_dataset %>%
group_by(product_name) %>%
filter(change_date == max(change_date)) %>%
ungroup() %>%
select(product_name, change_date, vendor, product_id, price_change)
# View the new dataset
head(latest_changes)
View(latest_changes)
#### Workspace setup ####
library(tidyverse)
library(here)
library(readr)
clean_data <- read_csv("data/02-analysis_data/clean_data.csv")
#### Clean data ####
# Load necessary library
library(dplyr)
library(lubridate)
# Assuming your dataset is named "clean_data" and already imported
clean_data <- clean_data %>%
mutate(
vendor = case_when(
product_id %in% c(4068860, 3998031, 4068282, 4073728) ~ "walmart",  # Assign "walmart" for these product_ids
product_id %in% c(712206, 712154, 710822, 711970) ~ "Voila",      # Assign "Voila" for these product_ids
product_id %in% c(3677991, 3677154, 3678071, 3677566) ~ "TandT",
product_id %in% c(1704900, 1688551, 1698576, 1695676) ~ "Loblaws",
product_id %in% c(2892726, 2881295, 2875605, 2886297) ~ "NoFrills",
product_id %in% c(919285, 920226, 917069, 917272) ~ "Galleria",
product_id %in% c(2321339, 2332786, 2320771, 2328223) ~ "Metro",
product_id %in% c(3358207, 3357385, 3357119, 3360423) ~ "SaveOnFoods",
TRUE ~ NA_character_                            # Default to NA for all other product_ids
),
product_name = case_when(
product_id %in% c(4068860, 3677991, 1704900, 2892726, 712154, 919285, 2321339, 3358207) ~ "Lactose-Free 2% Milk",
product_id %in% c(712206, 1688551, 2332786, 2881295, 3357385, 3998031, 3677154, 920226) ~ "100% Whole Grain Ancient with Quinoa Bread",
product_id %in% c(1698576, 2875605, 2320771, 3678071, 4068282, 710822, 3358119, 917069) ~ "Omega 3 Eggs",
product_id %in% c(1695676, 2328223, 2886297, 3360423, 4073728, 3677566, 711970, 917272) ~ "Smoked Classic Cut Bacon",
TRUE ~ NA_character_                            # Default to NA for all other product_ids
)
)
# Convert 'nowtime' to DateTime format if necessary
analysis_data$nowtime <- as.POSIXct(clean_data$nowtime, format = "%Y-%m-%d %H:%M:%S")
head(price_change_dataset)
# Convert 'nowtime' to Date format
analysis_data <- analysis_data %>%
mutate(date = as.Date(nowtime, format = "%Y-%m-%d"))
# Sort the data by product_id, vendor, and date
analysis_data <- analysis_data %>%
arrange(product_id, vendor, date)
# Calculate price change and filter only rows where price changed
price_change_data <- analysis_data %>%
group_by(product_id, vendor) %>%
mutate(
price_change = as.numeric(current_price) - as.numeric(lag(current_price))
) %>%
filter(!is.na(price_change) & price_change != 0) %>%  # Include only rows with price changes
rename(change_date = date) %>%  # Rename the date column to change_date
select(change_date, price_change, product_id, vendor, product_name, current_price) %>%
ungroup()
# View the resulting dataset
head(price_change_data)
analysis_data <- analysis_data %>%
mutate(date = as.Date(nowtime, format = "%Y-%m-%d"))
# Sort the data by product_id, vendor, and date
analysis_data <- analysis_data %>%
arrange(product_id, vendor, date)
# Calculate price change and filter only rows where price changed
price_change_data <- analysis_data %>%
group_by(product_id, vendor) %>%
mutate(
price_change = as.numeric(current_price) - as.numeric(lag(current_price)), # Calculate the price change
change_date = date, # The date of the current row
old_price = lag(current_price) # The previous day's price
) %>%
filter(!is.na(price_change) & price_change != 0) %>% # Filter rows where price change occurred
ungroup() %>%
select(change_date, price_change, product_id, vendor, product_name, old_price)
head(price_change_data)
#### Preamble ####
# Purpose: Cleans the raw plane data recorded by two observers..... [...UPDATE THIS...]
# Author: Rohan Alexander [...UPDATE THIS...]
# Date: 6 April 2023 [...UPDATE THIS...]
# Contact: rohan.alexander@utoronto.ca [...UPDATE THIS...]
# License: MIT
# Pre-requisites: [...UPDATE THIS...]
# Any other information needed? [...UPDATE THIS...]
#### Workspace setup ####
library(tidyverse)
library(here)
library(readr)
clean_data <- read_csv("data/02-analysis_data/clean_data.csv")
#### Clean data ####
# Load necessary library
library(dplyr)
library(lubridate)
# Assuming your dataset is named "clean_data" and already imported
clean_data <- clean_data %>%
mutate(
vendor = case_when(
product_id %in% c(4068860, 3998031, 4068282, 4073728) ~ "walmart",  # Assign "walmart" for these product_ids
product_id %in% c(712206, 712154, 710822, 711970) ~ "Voila",      # Assign "Voila" for these product_ids
product_id %in% c(3677991, 3677154, 3678071, 3677566) ~ "TandT",
product_id %in% c(1704900, 1688551, 1698576, 1695676) ~ "Loblaws",
product_id %in% c(2892726, 2881295, 2875605, 2886297) ~ "NoFrills",
product_id %in% c(919285, 920226, 917069, 917272) ~ "Galleria",
product_id %in% c(2321339, 2332786, 2320771, 2328223) ~ "Metro",
product_id %in% c(3358207, 3357385, 3357119, 3360423) ~ "SaveOnFoods",
TRUE ~ NA_character_                            # Default to NA for all other product_ids
),
product_name = case_when(
product_id %in% c(4068860, 3677991, 1704900, 2892726, 712154, 919285, 2321339, 3358207) ~ "Lactose-Free 2% Milk",
product_id %in% c(712206, 1688551, 2332786, 2881295, 3357385, 3998031, 3677154, 920226) ~ "100% Whole Grain Ancient with Quinoa Bread",
product_id %in% c(1698576, 2875605, 2320771, 3678071, 4068282, 710822, 3358119, 917069) ~ "Omega 3 Eggs",
product_id %in% c(1695676, 2328223, 2886297, 3360423, 4073728, 3677566, 711970, 917272) ~ "Smoked Classic Cut Bacon",
TRUE ~ NA_character_                            # Default to NA for all other product_ids
)
)
# Convert 'nowtime' to DateTime format if necessary
analysis_data$nowtime <- as.POSIXct(clean_data$nowtime, format = "%Y-%m-%d %H:%M:%S")
head(price_change_data)
library(tidyverse)
library(here)
library(readr)
clean_data <- read_csv("data/02-analysis_data/clean_data.csv")
#### Clean data ####
# Load necessary library
library(dplyr)
library(lubridate)
# Assuming your dataset is named "clean_data" and already imported
clean_data <- clean_data %>%
mutate(
vendor = case_when(
product_id %in% c(4068860, 3998031, 4068282, 4073728) ~ "walmart",  # Assign "walmart" for these product_ids
product_id %in% c(712206, 712154, 710822, 711970) ~ "Voila",      # Assign "Voila" for these product_ids
product_id %in% c(3677991, 3677154, 3678071, 3677566) ~ "TandT",
product_id %in% c(1704900, 1688551, 1698576, 1695676) ~ "Loblaws",
product_id %in% c(2892726, 2881295, 2875605, 2886297) ~ "NoFrills",
product_id %in% c(919285, 920226, 917069, 917272) ~ "Galleria",
product_id %in% c(2321339, 2332786, 2320771, 2328223) ~ "Metro",
product_id %in% c(3358207, 3357385, 3357119, 3360423) ~ "SaveOnFoods",
TRUE ~ NA_character_                            # Default to NA for all other product_ids
),
product_name = case_when(
product_id %in% c(4068860, 3677991, 1704900, 2892726, 712154, 919285, 2321339, 3358207) ~ "Lactose-Free 2% Milk",
product_id %in% c(712206, 1688551, 2332786, 2881295, 3357385, 3998031, 3677154, 920226) ~ "100% Whole Grain Ancient with Quinoa Bread",
product_id %in% c(1698576, 2875605, 2320771, 3678071, 4068282, 710822, 3358119, 917069) ~ "Omega 3 Eggs",
product_id %in% c(1695676, 2328223, 2886297, 3360423, 4073728, 3677566, 711970, 917272) ~ "Smoked Classic Cut Bacon",
TRUE ~ NA_character_                            # Default to NA for all other product_ids
)
)
# Convert 'nowtime' to DateTime format if necessary
analysis_data$nowtime <- as.POSIXct(clean_data$nowtime, format = "%Y-%m-%d %H:%M:%S")
# Convert 'nowtime' to Date format
analysis_data <- analysis_data %>%
mutate(date = as.Date(nowtime, format = "%Y-%m-%d"))
# Sort the data by product_id, vendor, and date
analysis_data <- analysis_data %>%
arrange(product_id, vendor, date)
# Calculate price change and filter only rows where price changed
price_change_data <- analysis_data %>%
group_by(product_id, vendor) %>%
mutate(
price_change = as.numeric(current_price) - as.numeric(lag(current_price)), # Calculate the price change
change_date = date, # The date of the current row
old_price = lag(current_price) # The previous day's price
) %>%
filter(!is.na(price_change) & price_change != 0) %>% # Filter rows where price change occurred
ungroup() %>%
select(change_date, price_change, product_id, vendor, product_name, old_price)
head(price_change_data)
write_csv(price_change_data, here("data", "02-analysis_data", "price_change_data.csv"))
clean_data <- clean_data %>%
mutate(
vendor = case_when(
product_id %in% c(4068860, 3998031, 4068282, 4073728) ~ "walmart",  # Assign "walmart" for these product_ids
product_id %in% c(712206, 712154, 710822, 711970) ~ "Voila",      # Assign "Voila" for these product_ids
product_id %in% c(3677991, 3677154, 3678071, 3677566) ~ "TandT",
product_id %in% c(1704900, 1688551, 1698576, 1695676) ~ "Loblaws",
product_id %in% c(2892726, 2881295, 2875605, 2886297) ~ "NoFrills",
product_id %in% c(919285, 920226, 917069, 917272) ~ "Galleria",
product_id %in% c(2321339, 2332786, 2320771, 2328223) ~ "Metro",
product_id %in% c(3358207, 3357385, 3357119, 3360423) ~ "SaveOnFoods",
TRUE ~ NA_character_                            # Default to NA for all other product_ids
),
product_name = case_when(
product_id %in% c(4068860, 3677991, 1704900, 2892726, 712154, 919285, 2321339, 3358207) ~ "Lactose-Free 2% Milk",
product_id %in% c(712206, 1688551, 2332786, 2881295, 3357385, 3998031, 3677154, 920226) ~ "100% Whole Grain Ancient with Quinoa Bread",
product_id %in% c(1698576, 2875605, 2320771, 3678071, 4068282, 710822, 3358119, 917069) ~ "Omega 3 Eggs",
product_id %in% c(1695676, 2328223, 2886297, 3360423, 4073728, 3677566, 711970, 917272) ~ "Smoked Classic Cut Bacon",
TRUE ~ NA_character_                            # Default to NA for all other product_ids
)
)
# Convert 'nowtime' to DateTime format if necessary
analysis_data$nowtime <- as.POSIXct(clean_data$nowtime, format = "%Y-%m-%d %H:%M:%S")
# Convert 'nowtime' to DateTime format in the `clean_data` dataset
clean_data <- clean_data %>%
mutate(nowtime = as.POSIXct(nowtime, format = "%Y-%m-%d %H:%M:%S"))
# Remove rows where 'nowtime' is before '2024-08-01'
filtered_data <- clean_data %>%
filter(nowtime >= as.POSIXct("2024-08-01"))
# View the filtered data
head(filtered_data)
write_csv(filtered_data, here("data", "02-analysis_data", "analysis_data.csv"))
#### Preamble ####
# Purpose: Cleans the raw plane data recorded by two observers..... [...UPDATE THIS...]
# Author: Rohan Alexander [...UPDATE THIS...]
# Date: 6 April 2023 [...UPDATE THIS...]
# Contact: rohan.alexander@utoronto.ca [...UPDATE THIS...]
# License: MIT
# Pre-requisites: [...UPDATE THIS...]
# Any other information needed? [...UPDATE THIS...]
#### Workspace setup ####
library(tidyverse)
library(here)
library(readr)
clean_data <- read_csv("data/02-analysis_data/clean_data.csv")
#### Clean data ####
# Load necessary library
library(dplyr)
library(lubridate)
# Assuming your dataset is named "clean_data" and already imported
clean_data <- clean_data %>%
mutate(
vendor = case_when(
product_id %in% c(4068860, 3998031, 4068282, 4073728) ~ "walmart",  # Assign "walmart" for these product_ids
product_id %in% c(712206, 712154, 710822, 711970) ~ "Voila",      # Assign "Voila" for these product_ids
product_id %in% c(3677991, 3677154, 3678071, 3677566) ~ "TandT",
product_id %in% c(1704900, 1688551, 1698576, 1695676) ~ "Loblaws",
product_id %in% c(2892726, 2881295, 2875605, 2886297) ~ "NoFrills",
product_id %in% c(919285, 920226, 917069, 917272) ~ "Galleria",
product_id %in% c(2321339, 2332786, 2320771, 2328223) ~ "Metro",
product_id %in% c(3358207, 3357385, 3357119, 3360423) ~ "SaveOnFoods",
TRUE ~ NA_character_                            # Default to NA for all other product_ids
),
product_name = case_when(
product_id %in% c(4068860, 3677991, 1704900, 2892726, 712154, 919285, 2321339, 3358207) ~ "Lactose-Free 2% Milk",
product_id %in% c(712206, 1688551, 2332786, 2881295, 3357385, 3998031, 3677154, 920226) ~ "100% Whole Grain Ancient with Quinoa Bread",
product_id %in% c(1698576, 2875605, 2320771, 3678071, 4068282, 710822, 3358119, 917069) ~ "Omega 3 Eggs",
product_id %in% c(1695676, 2328223, 2886297, 3360423, 4073728, 3677566, 711970, 917272) ~ "Smoked Classic Cut Bacon",
TRUE ~ NA_character_                            # Default to NA for all other product_ids
)
)
# Convert 'nowtime' to DateTime format in the `clean_data` dataset
clean_data <- clean_data %>%
mutate(nowtime = as.POSIXct(nowtime, format = "%Y-%m-%d %H:%M:%S"))
# Remove rows where 'nowtime' is before '2024-08-01'
filtered_data <- clean_data %>%
filter(nowtime >= as.POSIXct("2024-08-01"))
# View the filtered data
head(filtered_data)
write_csv(filtered_data, here("data", "02-analysis_data", "analysis_data.csv"))
# Convert 'nowtime' to Date format
analysis_data <- analysis_data %>%
mutate(date = as.Date(nowtime, format = "%Y-%m-%d"))
# Sort the data by product_id, vendor, and date
analysis_data <- analysis_data %>%
arrange(product_id, vendor, date)
# Calculate price change and filter only rows where price changed
price_change_data <- analysis_data %>%
group_by(product_id, vendor) %>%
mutate(
price_change = as.numeric(current_price) - as.numeric(lag(current_price)), # Calculate the price change
change_date = date, # The date of the current row
old_price = lag(current_price) # The previous day's price
) %>%
filter(!is.na(price_change) & price_change != 0) %>% # Filter rows where price change occurred
ungroup() %>%
select(change_date, price_change, product_id, vendor, product_name, old_price)
# View the resulting dataset
head(price_change_data)
write_csv(price_change_data, here("data", "02-analysis_data", "price_change_data.csv"))
#| include: false
#| warning: false
#| message: false
package_list <- c("tidyverse", "kableExtra", "ggplot2", "dplyr", "here", "knitr", "rstanarm", "modelsummary", "readr", "lme4", "tinytex", "reshape2")
install_and_load <- function(package_list) {
for (package in package_list) {
if (!require(package, character.only = TRUE)) {
install.packages(package)
library(package, character.only = TRUE)
}
}
}
install_and_load(package_list)
analysis_data <- read_csv(here("data", "02-analysis_data", "analysis_data.csv"), show_col_types = FALSE)
price_change_data <- read_csv(here("data", "02-analysis_data", "price_change_data.csv"), show_col_types = FALSE)
#| label: tbl-1
#| tbl-cap: "Voila - Lactose-Free 2% Milk"
#| echo: false
#| warning: false
#| message: false
# Load necessary libraries
library(dplyr)
library(knitr)
library(readr)
# Convert 'nowtime' to DateTime format if necessary
analysis_data$nowtime <- as.POSIXct(analysis_data$nowtime, format = "%Y-%m-%d %H:%M:%S")
# Filter the data for the specified conditions
filtered_data <- analysis_data %>%
filter(
vendor == "Voila",
product_name == "Lactose-Free 2% Milk",
nowtime >= as.POSIXct("2024-08-05 11:18:00"),
nowtime <= as.POSIXct("2024-08-10 11:09:00")
)
# Present the filtered data as a table
kable(filtered_data, caption = "Filtered Data: Voila - Lactose-Free 2% Milk")
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Convert 'nowtime' to DateTime format if necessary
analysis_data$nowtime <- as.POSIXct(analysis_data$nowtime, format = "%Y-%m-%d %H:%M:%S")
# Filter the data for the specified product_ids
filtered_data <- analysis_data %>%
filter(product_id %in% c(4068860, 1704900, 2892726, 3677991))
# Create the graph
ggplot(filtered_data, aes(x = nowtime, y = as.numeric(current_price), color = vendor)) +
geom_line() +
geom_point() +
labs(
title = "Price Changes Over Time for Selected Products",
x = "Time",
y = "Current Price",
color = "Vendor"
) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Convert 'nowtime' to DateTime format if necessary
analysis_data$nowtime <- as.POSIXct(analysis_data$nowtime, format = "%Y-%m-%d %H:%M:%S")
# Convert 'nowtime' to DateTime format if necessary
analysis_data$nowtime <- as.POSIXct(analysis_data$nowtime, format = "%Y-%m-%d %H:%M:%S")
# Filter the data for the specified product IDs
filtered_data <- analysis_data %>%
filter(product_id %in% c(712206, 1688551, 2332786, 2881295, 3357385, 3998031))
# Create the graph
ggplot(filtered_data, aes(x = nowtime, y = as.numeric(current_price), color = vendor)) +
geom_line() +
labs(
title = "Price Trends Over Time by Vendor",
x = "Time",
y = "Current Price",
color = "Vendor"
) +
theme_minimal()
# Convert 'nowtime' to DateTime format
analysis_data$nowtime <- as.POSIXct(analysis_data$nowtime, format = "%Y-%m-%d %H:%M:%S")
# Filter the data for the specified product_ids
filtered_data <- analysis_data %>%
filter(product_id %in% c(1695676, 2886297, 3360423, 4073728))
# Create the graph
ggplot(filtered_data, aes(x = nowtime, y = as.numeric(current_price), color = vendor)) +
geom_line(size = 1) +
labs(
title = "Price Changes Over Time for Selected Products",
x = "Time",
y = "Current Price",
color = "Vendor"
) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Get the latest change_date for each product_name
latest_changes <- price_change_data %>%
group_by(product_name) %>%
filter(change_date == max(change_date)) %>%
ungroup() %>%
select(product_name, change_date, vendor, product_id, price_change)
# View the new dataset
head(latest_changes)
library(readr)
price_change_data <- read_csv("data/02-analysis_data/price_change_data.csv")
View(price_change_data)
